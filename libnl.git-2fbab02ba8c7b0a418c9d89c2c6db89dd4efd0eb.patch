From 2fbab02ba8c7b0a418c9d89c2c6db89dd4efd0eb Mon Sep 17 00:00:00 2001
From: Thomas Graf <tgraf@redhat.com>
Date: Wed, 9 May 2012 15:02:40 +0200
Subject: [PATCH] doc: add section about addressing

Adds a new section to netlink fundamentals explaining the common
addressing use cases and illustrates kernel->user, user->user,
and user->kernel communication.
---
 doc/core.txt              |  189 +++++++++++++++++++++++++++++++++++---------
 doc/images/addressing.png |  Bin 0 -> 13682 bytes
 2 files changed, 150 insertions(+), 39 deletions(-)
 create mode 100644 doc/images/addressing.png

diff --git a/doc/core.txt b/doc/core.txt
index 19ebf70..7f26e05 100644
--- a/doc/core.txt
+++ b/doc/core.txt
@@ -7,7 +7,7 @@
 Netlink Library (libnl)
 =======================
 Thomas Graf <tgraf@suug.ch>
-3.2, Sep 13 2011:
+3.2, May 9 2011:
 :numbered:
 
 == Introduction
@@ -59,32 +59,47 @@ The low level APIs are described in:
 
 === Linking to this Library
 
-.Checking the presence using autoconf
+.Checking the presence of the library using autoconf
 
 Projects using autoconf may use +PKG_CHECK_MODULES()+ to check if
 a specific version of libnl is available on the system. The example
 below also shows how to retrieve the +CFLAGS+ and linking dependencies
 required to link against the library.
 
+The following example shows how to check for a specific version of libnl. If
+found, it extends the `CFLAGS` and `LIBS` variable appropriately:
+
 [source]
 ----
 PKG_CHECK_MODULES(LIBNL3, libnl-3.0 >= 3.1, [have_libnl3=yes], [have_libnl3=no])
 if (test "${have_libnl3}" = "yes"); then
-	CFLAGS="$LIBNL3_CFLAGS"
-	LIBS="$LIBNL3_LIBS"
+	CFLAGS+="$LIBNL3_CFLAGS"
+	LIBS+="$LIBNL3_LIBS"
 fi
 ----
 
 NOTE: The pkgconfig file is named +libnl-3.0.pc+ for historic reasons, it also
       covers library versions >= 3.1.
 
-.Main Header
+.Header Files
+
+The main header file is `<netlink/netlink.h>`. Additional headers may need to
+be included in your sources depending on the subsystems and components your
+program makes use of.
+
+[source,c]
+-----
+#include <netlink/netlink.h>
+#include <netlink/cache.h>
+#include <netlink/route/link.h>
+-----
+
+.Version Dependent Code
 
-The main header is `<netlink/netlink.h>`. Additional headers need to
-be included in your sources depending on the subsystems your program
-makes use of.
+If your code wishes to be capable to link against multiple versions of libnl
+you may have direct the compiler to only include portions on the code depending
+on the version of libnl that it is compiled against.
 
-.Version Checking
 [source,c]
 -----
 #include <netlink/version.h>
@@ -94,7 +109,7 @@ makes use of.
 #endif
 -----
 
-.Linking to libnl
+.Linking
 -----
 $ gcc myprogram.c -o myprogram $(pkgconfig --cflags --libs libnl-3.0)
 -----
@@ -120,13 +135,12 @@ $ NLDBG=2 ./myprogram
 | 4     | Even less important messages
 |===============================================================
 
-.Debugging Netlink Messages
+.Debugging the Netlink Protocol
 
-Often it is useful to peek into the stream of netlink messages
-exchanged with other sockets. Setting the environment variable
-+NLCB=debug+ will cause the debugging message handlers to be used
-causing the netlink messages exchanged to be printed to +stderr+ in a
-human readable format:
+It is often useful to peek into the stream of netlink messages exchanged
+with other sockets. Setting the environment variable +NLCB=debug+ will
+cause the debugging message handlers to be used which in turn print the
+netlink messages exchanged in a human readable format to to +stderr+:
 
 -----
 $ NLCB=debug ./myprogram
@@ -180,6 +194,92 @@ protocol uses its own protocol number (e.g. +NETLINK_ROUTE+,
 port number, formerly referred to as PID, which uniquely identifies
 each peer.
 
+[[core_addressing]]
+=== Addressing
+
+The netlink address (port) consists of a 32bit integer. Port 0 (zero)
+is reserved for the kernel and refers to the kernel side socket of each
+netlink protocol family. Other port numbers usually refer to user space
+owned sockets, although this is not enforced.
+
+NOTE: In the beginning, it was common practice to use the process
+      identifier (PID) as the local port number. This became unpractical
+      with the introduction of threaded netlink applications and
+      applications requiring multiple sockets. Therefore libnl generates
+      unique port numbers based on the process identifier and adds an
+      offset to it allowing for multiple sockets to be used. The initial
+      socket will still equal to the process identifier for backwards
+      compatibility reasons.
+
+image:addressing.png["Addressing Example"]
+
+The above figure illustrates three applications and the kernel side
+exposing two kernel side sockets. It shows the common netlink use
+cases:
+
+  * User space to kernel
+  * User space to user space
+  * Listening to kernel multicast notifications
+
+.User Space to Kernel
+
+The most common form of netlink usage is for a user space application
+to send requests to the kernel and process the reply which is either
+an error message or a success notification.
+
+["mscgen"]
+--------
+msc {
+  App1,App2,Kernel;
+  App1=>Kernel [label="request (src=11, dst=0)"];
+  Kernel<=App1 [label="reply (src=0, dst=11)"];
+  ...;
+  App2=>Kernel [label="request (src=21, dst=0)"];
+  Kernel<=App2 [label="reply (src=0, dst=21)"];
+}
+--------
+
+.User Space to User Space
+
+Netlink may also be used as an IPC mechanism to communicate between user
+space applications directly. Communication is not limited to two peers,
+any number of peers may communicate with each other and multicasting
+capabilities allow to reach multiple peers with a single message.
+
+In order for the sockets to be visible to each other, both sockets must
+be created for the same netlink protocol family.
+
+["mscgen"]
+--------
+msc {
+  App2,App3;
+  App2=>App3 [label="request (src=22, dst=31)"];
+  App2<=App3 [label="reply (src=31, dst=22)"];
+  ...;
+}
+--------
+
+.User space listening to kernel notifications
+
+This form of netlink communication is typically found in user space
+daemons that need to act on certain kernel events. Such daemons will
+typically maintain a netlink socket subscribed to a multicast group that
+is used by the kernel to notify interested user space parties about
+specific events.
+
+["mscgen"]
+--------
+msc {
+  Kernel,App3;
+  Kernel=>App3 [label="notification (src=0, group=foo)"];
+  ...;
+}
+--------
+
+Use of multicasting is preferred over direct addressing due to the
+flexibility in exchanging the user space component at any time without
+the kernel noticing.
+
 [[core_msg_format]]
 === Message Format
 
@@ -395,7 +495,7 @@ The following standard flags are defined
 #define NLM_F_ECHO		8
 --------
 
-- `NLM_F_REQUEST` - Message is a request, see <<core_msg_type>>.
+- `NLM_F_REQUEST` - Message is a request, see <<core_msg_types>>.
 - `NLM_F_MULTI` - Multipart message, see <<core_multipart>>
 - `NLM_F_ACK` - ACK message requested, see <<core_msg_ack>>.
 - `NLM_F_ECHO` - Request to echo the request.
@@ -447,13 +547,14 @@ flags are mutually exclusive to the `GET` flags:
 Behaviour of these flags may differ slightly between different netlink
 protocols.
 
+[[core_seq_num]]
 === Sequence Numbers
 
 Netlink allows the use of sequence numbers to help relate replies to
 requests. It should be noted that unlike in protocols such as TCP
 there is no strict enforcment of the sequence number. The sole purpose
 of sequence numbers is to assist a sender in relating replies to the
-corresponding requests. See <<core_msg_type>> for more information.
+corresponding requests. See <<core_msg_types>> for more information.
 
 Sequence numbers are managed on a per socket basis, see
 <<core_sk_seq_num>> for more information on how to use sequence numbers.
@@ -469,16 +570,15 @@ See <<core_sk_multicast>>
 == Netlink Sockets
 
 In order to use the netlink protocol, a netlink socket is required.
-Each socket defines a completely independent context for sending and
-receiving of messages. An application may use multiple sockets for the
-same netlink protocol, e.g. one socket to send requests and receive
-replies and another socket subscribed to a multicast group to receive
-notifications.
+Each socket defines an independent context for sending and receiving of
+messages. An application may make use multiple sockets, e.g. a socket to
+send requests and receive the replies and another socket subscribed to a
+multicast group to receive notifications.
 
-=== Allocation & Freeing
+=== Socket structure (struct nl_sock)
 
-The netlink socket and all its related attributes are represented by
-+struct nl_sock+.
+The netlink socket and all related attributes including the actual file
+descriptor are represented by +struct nl_sock+.
 
 [source,c]
 --------
@@ -488,18 +588,22 @@ struct nl_sock *nl_socket_alloc(void)
 void nl_socket_free(struct nl_sock *sk)
 --------
 
+The application must allocate an instance of +struct nl_sock+ for each
+netlink socket it wishes to use.
+
 [[core_sk_seq_num]]
 === Sequence Numbers
 
 The library will automatically take care of sequence number handling
-for the application. A sequence number counter is stored in struct
-nl_sock which is meant to be used when sending messages which will
-produce a reply, error or any other message which needs to be
-related to the original message.
+for the application. A sequence number counter is stored in the
+socket structure which is used and incremented automatically when a 
+message needs to be sent which is expected to generate a reply such as
+an error or any other message type that needs to be related to the
+original message.
 
-The counter can be used directly with the function nl_socket_use_seq()
-which will return the current value of the counter and increment it by
-one afterwards.
+Alternatively, the counter can be used directly via the function
+nl_socket_use_seq(). It will return the current value of the counter
+and increment it by one afterwards.
 
 [source,c]
 --------
@@ -510,8 +614,8 @@ unsigned int nl_socket_use_seq(struct nl_sock *sk);
 
 Most applications will not want to deal with sequence number handling
 themselves though. When using nl_send_auto() the sequence number is
-filled out automatically and matched again on the receiving side. See
-<<core_send_recv>> for more information.
+filled in automatically and matched again when a reply is received. See
+section <<core_send_recv>> for more information.
 
 This behaviour can and must be disabled if the netlink protocol
 implemented does not use a request/reply model, e.g. when a socket is
@@ -524,6 +628,9 @@ used to receive notification messages.
 void nl_socket_disable_seq_check(struct nl_sock *sk);
 --------
 
+For more information on the theory behind netlink sequence numbers,
+see section <<core_seq_num>>.
+
 [[core_sk_multicast]]
 === Multicast Group Subscriptions
 
@@ -535,7 +642,7 @@ commonly used to implement event notifications.
 Prior to kernel 2.6.14 the group subscription was performed using a
 bitmask which limited the number of groups per protocol family to 32.
 This outdated interface can still be accessed via the function
-nl_join_groups even though it is not recommended for new code.
+nl_join_groups() even though it is not recommended for new code.
 
 [source,c]
 --------
@@ -663,6 +770,8 @@ uint32_t nl_socket_get_local_port(const struct nl_sock *sk);
 void nl_socket_set_local_port(struct nl_sock *sk, uint32_t port);
 --------
 
+See section <<core_addressing>> for more information on port numbers.
+
 CAUTION: Overwriting the local port is possible but you have to ensure
 that the provided value is unique and no other socket in any other
 application is using the same value.
@@ -685,6 +794,8 @@ uint32_t nl_socket_get_peer_port(const struct nl_sock *sk);
 void nl_socket_set_peer_port(struct nl_sock *sk, uint32_t port);
 --------
 
+See section <<core_addressing>> for more information on port numbers.
+
 .File Descriptor
 
 Netlink uses the BSD socket interface, therefore a file descriptor is
@@ -776,7 +887,7 @@ function can be used to enable/disable receival of packet information.
 int nl_socket_recv_pktinfo(struct nl_sock *sk, int state);
 --------
 
-NOTE: Processing of NETLINK_PKTINFO has not been implemented yet.
+CAUTION: Processing of NETLINK_PKTINFO has not been implemented yet.
 
 [[core_send_recv]]
 == Sending and Receiving of Messages / Data
@@ -1350,8 +1461,8 @@ size for messages by calling nlmsg_set_default_size():
 void	  nlmsg_set_default_size(size_t);
 --------
 
-NOTE: Calling nlmsg_set_default_size() does not change the maximum
-      message size of already allocated messages.
+CAUTION: Calling nlmsg_set_default_size() does not change the maximum
+         message size of already allocated messages.
 
 [source,c]
 --------
diff --git a/doc/images/addressing.png b/doc/images/addressing.png
new file mode 100644
index 0000000000000000000000000000000000000000..9dcaaffd242c3c2fda3cd9ff9f04cd7ec06447ca
GIT binary patch
literal 13682
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

literal 0
HcmV?d00001

-- 
1.7.6.5

